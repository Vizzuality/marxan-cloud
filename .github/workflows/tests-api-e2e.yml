name: Tests - API e2e tests
on:
  push:
    paths:
      - 'api/**'
      - 'geoprocessing/**'
      - '.github/**'
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  build_and_push:
    uses: ./.github/workflows/tests-backend-build-oci-images.yml

  test-api-e2e:
    name: E2E tests - API
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    needs: build_and_push
    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - 'access-control'
          - 'api-events'
          - 'async-jobs-garbage-collector'
          - 'business-critical'
          - 'calculate-pu-protection-level'
          - 'cloning'
          - 'files-repository'
          - 'implicit-permissions'
          - 'integration'
          - 'legacy-project-import'
          - 'project'
          - 'project-jobs-status'
          - 'project-planning-areas-tiles'
          - 'project-planning-units'
          - 'project-protected-areas'
          - 'scenario-cost-template'
          - 'scenario-difference-map-tiles'
          - 'scenario-features'
          - 'scenario-input-files'
          - 'scenario-locks'
          - 'scenario-protected-areas'
          - 'scenario-pu-change'
          - 'scenario-run-results'
          - 'scenarios'
          - 'scenario-solutions'
          - 'scenarios-pu-data'
          - 'upload-feature'

    steps:

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Render Compose file with image tags
        env:
          API_IMAGE_TAG: ${{ needs.build_and_push.outputs.api_image_tag }}
          GEOPROCESSING_IMAGE_TAG: ${{ needs.build_and_push.outputs.geoprocessing_image_tag }}
          APIDB_IMAGE_TAG: ${{ needs.build_and_push.outputs.apidb_image_tag }}
          GEODB_IMAGE_TAG: ${{ needs.build_and_push.outputs.geodb_image_tag }}
          REDIS_IMAGE_TAG: ${{ needs.build_and_push.outputs.redis_image_tag }}
        run: |
          envsubst < docker-compose-test-e2e.ci.yml.tpl > docker-compose-test-e2e.ci.yml

      - name: Run CI tests via make task
        run: TEST_SUITE_PATH="${{ matrix.test-suite }}" make test-e2e-api environment=ci
