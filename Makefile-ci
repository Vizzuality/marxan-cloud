.PHONY: start

# docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml up --build --abort-on-container-exit --exit-code-from api api

test-e2e-api:
	# start from clean slate, in case anything was left around from previous runs (mostly relevant locally, not in CI)
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml rm --stop --force test-e2e-postgresql-api test-e2e-postgresql-geo-api
	# build API container
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml build api
	# build geoprocessing container
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml build geoprocessing
	# run migrations - API
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml run api run-migrations-for-e2e-tests
	# run migrations - geoprocessing
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml run geoprocessing run-migrations-for-e2e-tests
	# load test data - API
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-api psql -U "${API_POSTGRES_USER}" < api/test/fixtures/test-data.sql
	# load test data - geoprocessing db
	USERID=$(shell docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-api psql -X -A -t -U "${API_POSTGRES_USER}" -c "select id from users limit 1"); \
	echo $$USERID; \
	sed -e "s/\$$user/$$USERID/g" api/test/fixtures/test-admin-data.sql | docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-geo-api psql -U "${GEO_POSTGRES_USER}"; \
	sed -e "s/\$$user/$$USERID/g" api/test/fixtures/test-wdpa-data.sql | docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-geo-api psql -U "${GEO_POSTGRES_USER}";
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-api psql -U "${API_POSTGRES_USER}" < api/test/fixtures/test-features.sql
	@for i in api/test/fixtures/features/*.sql; do \
		table_name=`basename -s .sql "$$i"`; \
		featureid=`docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-api psql -X -A -t -U "${API_POSTGRES_USER}" -c "select id from features where feature_class_name = '$$table_name'"`; \
		echo "appending data for $${table_name} with id $${featureid}"; \
		sed -e "s/\$$feature_id/$$featureid/g" api/test/fixtures/features/$${table_name}.sql | docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml exec -T test-e2e-postgresql-geo-api psql -U "${GEO_POSTGRES_USER}"; \
		done;
	# run tests
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml up --abort-on-container-exit --exit-code-from api api
	# teardown
	docker-compose -f docker-compose-test-e2e.yml -f docker-compose-test-e2e.ci.yml rm --stop --force
