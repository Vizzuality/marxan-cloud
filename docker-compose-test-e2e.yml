version: "3.8"
services:
  api:
    # no build section: when running in CI, we use `image` and when running
    # locally we define the build in docker-compose-test-e2e.local.yml
    ports:
      - "3000:3000"
    container_name: marxan-test-e2e-api
    command: develop
    volumes:
      - ./api/apps:/opt/marxan-api/apps
      - ./api/libs:/opt/marxan-api/libs
      - marxan-cloud-backend-e2e-temp-storage:/tmp/storage
    environment:
      - NODE_PATH=src
      - NODE_ENV=test
      - API_POSTGRES_HOST=test-e2e-postgresql-api
      - API_POSTGRES_USER
      - API_POSTGRES_PASSWORD
      - API_POSTGRES_PORT=5432
      - API_POSTGRES_DB
      - GEO_POSTGRES_HOST=test-e2e-postgresql-geo-api
      - GEO_POSTGRES_USER
      - GEO_POSTGRES_PASSWORD
      - GEO_POSTGRES_PORT=5432
      - GEO_POSTGRES_DB
      - REDIS_HOST=test-e2e-redis
      - NODE_CONFIG_DIR=apps/api/config
    depends_on:
      - test-e2e-postgresql-api
      - test-e2e-postgresql-geo-api
      - test-e2e-redis

  geoprocessing:
      # no build section: when running in CI, we use `image` and when running
      # locally we define the build in docker-compose-test-e2e.local.yml
      ports:
        - "3001:3000"
      container_name: marxan-test-e2e-geoprocessing
      command: develop
      volumes:
        - ./api/apps:/opt/marxan-geoprocessing/apps
        - ./api/libs:/opt/marxan-geoprocessing/libs
        - marxan-cloud-backend-e2e-temp-storage:/tmp/storage
      environment:
        - NODE_PATH=src
        - NODE_ENV=test
        - API_POSTGRES_HOST=test-e2e-postgresql-api
        - API_POSTGRES_USER
        - API_POSTGRES_PASSWORD
        - API_POSTGRES_PORT=5432
        - API_POSTGRES_DB
        - GEO_POSTGRES_HOST=test-e2e-postgresql-geo-api
        - GEO_POSTGRES_USER
        - GEO_POSTGRES_PASSWORD
        - GEO_POSTGRES_PORT=5432
        - GEO_POSTGRES_DB
        - REDIS_HOST=test-e2e-redis
        - NODE_CONFIG_DIR=apps/geoprocessing/config
      depends_on:
        - test-e2e-postgresql-geo-api
        - test-e2e-postgresql-api
        - test-e2e-redis
        - api

  test-e2e-postgresql-api:
    # no build section: when running in CI, we use `image` and when running
    # locally we define the build in docker-compose-test-e2e.local.yml
    container_name: marxan-test-e2e-postgresql-api
    volumes:
      - "./api/test/fixtures:/opt"
    ports:
      - "3542:5432"
    environment:
      - POSTGRES_PASSWORD=marxan-api
      - POSTGRES_USER=marxan-api
      - POSTGRES_DB=marxan-api
    restart: on-failure

  test-e2e-postgresql-geo-api:
    # no build section: when running in CI, we use `image` and when running
    # locally we define the build in docker-compose-test-e2e.local.yml
    container_name: marxan-test-e2e-postgresql-geo-api
    ports:
      - "3541:5432"
    environment:
      - POSTGRES_PASSWORD=marxan-geo-api
      - POSTGRES_USER=marxan-geo-api
      - POSTGRES_DB=marxan-geo-api
    restart: on-failure

  test-e2e-redis:
    # no build section: when running in CI, we use `image` and when running
    # locally we define the build in docker-compose-test-e2e.local.yml
    container_name: marxan-test-e2e-redis
    command: [ "redis-server" ]
    ports:
      - "3050:6379"
    restart: on-failure

volumes:
  marxan-cloud-backend-e2e-temp-storage:
