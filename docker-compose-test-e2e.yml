# GH Actions runners on Ubuntu 18.04 require an older (<= 3.6) Compose file version
version: "3.6"
services:
  api:
    build:
      context: ./api
<<<<<<< HEAD
      dockerfile: Dockerfile
      args:
        UID: 5000
        GID: 5000
    ports:
      - "${API_SERVICE_PORT}:3000"
    container_name: marxan-test-e2e-api
    command: test-e2e
    user: "$UID:$GID"
    volumes:
      - ./api/src:/opt/marxan-api/src
      - ./api/test:/opt/marxan-api/test
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@marxan-test-e2e-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@marxan-test-e2e-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
    depends_on:
      - test-e2e-postgresql-api
      - test-e2e-postgresql-geo-api
  geoprocessing:
    build:
      context: ./geoprocessing
      dockerfile: Dockerfile
=======
      dockerfile: api.Dockerfile
      args:
        UID: 5000
        GID: 5000
        UPLOADS_TEMP_DIR: "/tmp/storage"
    ports:
      - "${API_SERVICE_PORT}:3000"
    container_name: marxan-test-e2e-api
    command: develop
    user: "5000:5000"
    volumes:
      - ./api/apps:/opt/marxan-api/apps
      - ./api/libs:/opt/marxan-api/libs
      - marxan-cloud-backend-e2e-temp-storage:/tmp/storage
    environment:
      - NODE_PATH=src
      - NODE_ENV=test
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@test-e2e-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@test-e2e-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
      - REDIS_HOST=test-e2e-redis
      - NODE_CONFIG_DIR=apps/api/config
    depends_on:
      - test-e2e-postgresql-api
      - test-e2e-postgresql-geo-api
      - test-e2e-redis

  geoprocessing:
    build:
      context: ./api
      dockerfile: geo.Dockerfile
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
      args:
        UID: 5000
        GID: 5000
    ports:
      - "${GEOPROCESSING_SERVICE_PORT}:3000"
    container_name: marxan-test-e2e-geoprocessing
<<<<<<< HEAD
    command: test-e2e
    user: "$UID:$GID"
    volumes:
      - ./geoprocessing/src:/opt/marxan-geoprocessing/src
      - ./geoprocessing/test:/opt/marxan-geoprocessing/test
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@marxan-test-e2e-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@marxan-test-e2e-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
    depends_on:
      - test-e2e-postgresql-geo-api
      - test-e2e-postgresql-api
      - api
=======
    command: develop
    user: "5000:5000"
    volumes:
      - ./api/apps:/opt/marxan-geoprocessing/apps
      - ./api/libs:/opt/marxan-geoprocessing/libs
      - marxan-cloud-backend-e2e-temp-storage:/tmp/storage
    environment:
      - NODE_PATH=src
      - NODE_ENV=test
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@test-e2e-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@test-e2e-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
      - REDIS_HOST=test-e2e-redis
      - NODE_CONFIG_DIR=apps/geoprocessing/config
    depends_on:
      - test-e2e-postgresql-geo-api
      - test-e2e-postgresql-api
      - test-e2e-redis
      - api

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  test-e2e-postgresql-api:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: marxan-test-e2e-postgresql-api
    volumes:
<<<<<<< HEAD
      - ./api/test/fixtures/test-data.sql:/docker-entrypoint-initdb.d/test-data.sql
=======
      - "./api/test/fixtures:/opt"
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
    ports:
      - "${POSTGRES_API_SERVICE_PORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${API_POSTGRES_PASSWORD}
      - POSTGRES_USER=${API_POSTGRES_USER}
    restart: on-failure
<<<<<<< HEAD
=======

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  test-e2e-postgresql-geo-api:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: marxan-test-e2e-postgresql-geo-api
    ports:
      - "${POSTGRES_GEO_SERVICE_PORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${GEO_POSTGRES_PASSWORD}
      - POSTGRES_USER=${GEO_POSTGRES_USER}
<<<<<<< HEAD
    restart: always
=======
    restart: on-failure

  test-e2e-redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: marxan-test-e2e-redis
    command: [ "redis-server" ]
    ports:
      - "${REDIS_API_SERVICE_PORT}:6379"
    restart: on-failure

volumes:
  marxan-cloud-backend-e2e-temp-storage:
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
