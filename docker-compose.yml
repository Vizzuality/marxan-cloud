version: "3.8"
services:
  api:
    build:
      context: ./api
<<<<<<< HEAD
      dockerfile: Dockerfile
      args:
        UID: 5000
        GID: 5000
=======
      dockerfile: api.Dockerfile
      args:
        UID: 5000
        GID: 5000
        UPLOADS_TEMP_DIR: "/tmp/storage"
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
    ports:
      - "${API_SERVICE_PORT}:3000"
    container_name: marxan-api
    command: develop
    user: "5000:5000"
    volumes:
<<<<<<< HEAD
      - ./api/src:/opt/marxan-api/src
      - ./api/test:/opt/marxan-api/test
=======
      - ./api/apps:/opt/marxan-api/apps
      - ./api/libs:/opt/marxan-api/libs
      - marxan-cloud-backend-temp-storage:/tmp/storage
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
    env_file: .env
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@marxan-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@marxan-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
<<<<<<< HEAD
    depends_on:
      - postgresql-api
      - postgresql-geo-api
      - redis-api
=======
      - REDIS_HOST=marxan-redis
      - NODE_CONFIG_DIR=apps/api/config
    depends_on:
      - postgresql-api
      - postgresql-geo-api
      - redis

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "${APP_SERVICE_PORT}:3000"
    container_name: marxan-app
    command: start
    volumes:
      - ./app/src:/opt/marxan-app/src
      - ./app/test:/opt/marxan-app/test
    env_file: .env
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
<<<<<<< HEAD
  geoprocessing:
    build:
      context: ./geoprocessing
      dockerfile: Dockerfile
=======

  geoprocessing:
    build:
      context: ./api
      dockerfile: geo.Dockerfile
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
      args:
        UID: 5000
        GID: 5000
    ports:
      - "${GEOPROCESSING_SERVICE_PORT}:3000"
    container_name: marxan-geoprocessing
    command: develop
    user: "5000:5000"
    volumes:
<<<<<<< HEAD
      - ./geoprocessing/src:/opt/marxan-geoprocessing/src
      - ./geoprocessing/test:/opt/marxan-geoprocessing/test
=======
      - ./api/apps:/opt/marxan-geoprocessing/apps
      - ./api/libs:/opt/marxan-geoprocessing/libs
      - marxan-cloud-backend-temp-storage:/tmp/storage
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
    env_file: .env
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@marxan-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@marxan-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
<<<<<<< HEAD
=======
      - REDIS_HOST=marxan-redis
      - NODE_CONFIG_DIR=apps/geoprocessing/config
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
    depends_on:
      - postgresql-geo-api
      - postgresql-api
      - api
<<<<<<< HEAD
=======
      - redis

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  postgresql-api:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: marxan-postgresql-api
    ports:
      - "${POSTGRES_API_SERVICE_PORT}:5432"
    volumes:
<<<<<<< HEAD
      - marxan-cloud-postgresql-api-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${API_POSTGRES_PASSWORD}
      - POSTGRES_USER=${API_POSTGRES_USER}
    restart: on-failure
=======
      - "marxan-cloud-postgresql-api-data:/var/lib/postgresql/data"
      - "./api/apps/api/test/fixtures:/opt:ro"
    environment:
      - POSTGRES_PASSWORD=${API_POSTGRES_PASSWORD}
      - POSTGRES_USER=${API_POSTGRES_USER}
      - POSTGRES_DB=${API_POSTGRES_DB}
    restart: on-failure

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  postgresql-geo-api:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
      shm_size: 16gb
    shm_size: 16gb
    container_name: marxan-postgresql-geo-api
    ports:
      - "${POSTGRES_GEO_SERVICE_PORT}:5432"
    volumes:
      - marxan-cloud-postgresql-geo-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${GEO_POSTGRES_PASSWORD}
      - POSTGRES_USER=${GEO_POSTGRES_USER}
<<<<<<< HEAD
    restart: always
  redis-api:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: marxan-redis-api
    ports:
      - "${REDIS_API_SERVICE_PORT}:6379"
    volumes:
      - marxan-cloud-redis-api-data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    restart: on-failure
=======
      - POSTGRES_DB=${GEO_POSTGRES_DB}
    restart: always

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    hostname: redis
    container_name: marxan-redis
    command: [ "redis-server"]
    ports:
      - "${REDIS_API_SERVICE_PORT}:6379"
    restart: on-failure

  # Admin gui for redis
  redis-commander:
    image: rediscommander/redis-commander
    hostname: redis-commander
    container_name: marxan-redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:marxan-redis:6379
    ports:
      - '${REDIS_COMMANDER_PORT}:8081'
    depends_on:
      - redis

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  postgresql-airflow:
    image: postgres
    container_name: marxan-postgresql-airflow
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
<<<<<<< HEAD
=======

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  airflow-scheduler:
    container_name: marxan-airflow-scheduler
    image: apache/airflow:2.0.0
    command: scheduler
    depends_on:
        - postgresql-airflow
    restart: on-failure
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgresql-airflow/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - marxan-airflow-logs:/opt/airflow/logs
<<<<<<< HEAD
=======

>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
  airflow-webserver:
    container_name: marxan-airflow-webserver
    image: apache/airflow:2.0.0
    restart: on-failure
    entrypoint: ['sh','./scripts/entrypoint.sh']
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgresql-airflow/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - marxan-airflow-logs:/opt/airflow/logs
    ports:
      - "${AIRFLOW_PORT}:8080"
    depends_on:
      - postgresql-airflow
      - airflow-scheduler

<<<<<<< HEAD
networks:
  default:
    external:
      name: marxan-cloud-network

=======
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
volumes:
  marxan-cloud-postgresql-api-data:

  marxan-cloud-postgresql-geo-data:

  marxan-cloud-redis-api-data:

  marxan-airflow-logs:
<<<<<<< HEAD
=======

  marxan-cloud-backend-temp-storage:
>>>>>>> fbf3f123f8cc06fb4b1eda6e3680ba304ca80149
