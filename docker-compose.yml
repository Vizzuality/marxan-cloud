version: "3.8"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "${API_SERVICE_PORT}:3000"
    container_name: marxan-api
    command: develop
    volumes:
      - ./api/src:/opt/marxan-api/src
      - ./api/test:/opt/marxan-api/test
    env_file: .env
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@marxan-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@marxan-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
    depends_on:
      - postgresql-api
  # app:
  #   build:
  #     context: ./app
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${APP_SERVICE_PORT}:3000"
  #   container_name: marxan-app
  #   command: start
  #   volumes:
  #     - ./app/src:/opt/marxan-app/src
  #     - ./app/test:/opt/marxan-app/test
  #   env_file: .env
  #   environment:
  #     - NODE_PATH=src
  #     - NODE_ENV=development
  geoprocessing:
    build:
      context: ./geoprocessing
      dockerfile: Dockerfile
    ports:
      - "${GEOPROCESSING_SERVICE_PORT}:3001"
    container_name: marxan-geoprocessing
    command: develop
    volumes:
      - ./geoprocessing/src:/opt/marxan-geoprocessing/src
      - ./geoprocessing/test:/opt/marxan-geoprocessing/test
    env_file: .env
    environment:
      - NODE_PATH=src
      - NODE_ENV=development
      - API_POSTGRES_URL=postgres://${API_POSTGRES_USER}:${API_POSTGRES_PASSWORD}@marxan-postgresql-api:5432/${API_POSTGRES_DB}
      - GEO_POSTGRES_URL=postgres://${GEO_POSTGRES_USER}:${GEO_POSTGRES_PASSWORD}@marxan-postgresql-geo-api:5432/${GEO_POSTGRES_DB}
    depends_on:
      - postgresql-geo-api
      - api
  postgresql-api:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: marxan-postgresql-api
    ports:
      - "${POSTGRES_API_SERVICE_PORT}:5432"
    volumes:
      - marxan-cloud-postgresql-api-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${API_POSTGRES_PASSWORD}
      - POSTGRES_USER=${API_POSTGRES_USER}
    restart: on-failure
  postgresql-geo-api:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: marxan-postgresql-geo-api
    ports:
      - "${POSTGRES_GEO_SERVICE_PORT}:5432"
    volumes:
      - marxan-cloud-postgresql-geo-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${GEO_POSTGRES_PASSWORD}
      - POSTGRES_USER=${GEO_POSTGRES_USER}
    restart: always
  redis-api:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: marxan-redis-api
    ports:
      - "${REDIS_API_SERVICE_PORT}:6379"
    volumes:
      - marxan-cloud-redis-api-data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    restart: on-failure
  postgresql-airflow:
    image: postgres
    container_name: marxan-postgresql-airflow
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
  airflow-scheduler:
    container_name: marxan-airflow-scheduler
    image: apache/airflow:2.0.0
    command: scheduler
    depends_on:
        - postgresql-airflow
    restart: on-failure
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgresql-airflow/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
        - ./airflow/dags:/opt/airflow/dags
        - marxan-airflow-logs:/opt/airflow/logs
  airflow-webserver:
    container_name: marxan-airflow-webserver
    image: apache/airflow:2.0.0
    restart: on-failure
    entrypoint: ['sh','./scripts/entrypoint.sh']
    env_file:
        - .env
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgresql-airflow/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/scripts:/opt/airflow/scripts
        - marxan-airflow-logs:/opt/airflow/logs
    ports:
        - "${AIRFLOW_PORT}:8080"
    depends_on:
      - postgresql-airflow
      - airflow-scheduler

networks:
  default:
    external:
      name: marxan-cloud-network

volumes:
  marxan-cloud-postgresql-api-data:

  marxan-cloud-postgresql-geo-data:

  marxan-cloud-redis-api-data:

  marxan-airflow-logs:
